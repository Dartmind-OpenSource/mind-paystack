import 'package:dart_mappable/dart_mappable.dart';
part 'submit_charge_options.mapper.dart';

/// Options for submitting additional authentication data during charge flow.
///
/// This sealed class represents different types of authentication or
/// verification data that may be required to complete a payment charge.
/// Paystack's charge flow often requires additional verification steps
/// depending on the payment method, bank requirements, or risk assessment.
///
/// The class uses a discriminated union pattern to ensure type safety
/// when handling different verification types. Each subtype contains
/// the specific data needed for that verification method.
///
/// Common charge flow:
/// 1. Initialize charge with payment details
/// 2. Receive challenge response requiring additional data
/// 3. Submit appropriate SubmitChargeOptions based on challenge type
/// 4. Complete or continue verification process
///
/// Example usage:
/// ```dart
/// // Handle different challenge types
/// switch (challengeType) {
///   case 'pin':
///     final options = SubmitChargeOptions.pin(
///       pin: userEnteredPin,
///       reference: transactionReference,
///     );
///     break;
///   case 'otp':
///     final options = SubmitChargeOptions.otp(
///       otp: userEnteredOtp,
///       reference: transactionReference,
///     );
///     break;
/// }
/// ```
@MappableClass(discriminatorKey: 'type')
sealed class SubmitChargeOptions with SubmitChargeOptionsMappable {
  /// Creates a base SubmitChargeOptions instance.
  ///
  /// This constructor is used by the sealed class hierarchy and should
  /// not be called directly. Use the factory constructors instead.
  const SubmitChargeOptions();

  /// Creates options for submitting a PIN during charge authentication.
  ///
  /// Used when the charge flow requires PIN verification, typically for
  /// debit card transactions or bank account charges. The PIN is the
  /// customer's 4-digit card PIN or bank PIN.
  ///
  /// Parameters:
  /// - [pin]: Customer's 4-digit PIN for the payment method
  /// - [reference]: Transaction reference from the original charge request
  ///
  /// Example:
  /// ```dart
  /// final pinOptions = SubmitChargeOptions.pin(
  ///   pin: '1234',
  ///   reference: 'TXN_123456789',
  /// );
  /// ```
  const factory SubmitChargeOptions.pin({
    required String pin,
    required String reference,
  }) = SubmitPinOptions;

  /// Creates options for submitting an OTP during charge authentication.
  ///
  /// Used when the charge flow requires OTP (One-Time Password) verification,
  /// commonly sent via SMS to the customer's registered phone number or
  /// generated by their bank's mobile app.
  ///
  /// Parameters:
  /// - [otp]: One-Time Password received by the customer
  /// - [reference]: Transaction reference from the original charge request
  ///
  /// Example:
  /// ```dart
  /// final otpOptions = SubmitChargeOptions.otp(
  ///   otp: '123456',
  ///   reference: 'TXN_123456789',
  /// );
  /// ```
  const factory SubmitChargeOptions.otp({
    required String otp,
    required String reference,
  }) = SubmitOtpOptions;

  /// Creates options for submitting a phone number during charge flow.
  ///
  /// Used when additional phone verification is required, typically for
  /// risk assessment or when the original payment method doesn't have
  /// an associated phone number.
  ///
  /// Parameters:
  /// - [phone]: Customer's phone number in international format
  /// - [reference]: Transaction reference from the original charge request
  ///
  /// Example:
  /// ```dart
  /// final phoneOptions = SubmitChargeOptions.phone(
  ///   phone: '+2348012345678',
  ///   reference: 'TXN_123456789',
  /// );
  /// ```
  const factory SubmitChargeOptions.phone({
    required String phone,
    required String reference,
  }) = SubmitPhoneOptions;

  /// Creates options for submitting a birth date during charge verification.
  ///
  /// Used when additional identity verification is required, typically
  /// for high-value transactions or specific bank requirements. The
  /// birth date helps verify the customer's identity.
  ///
  /// Parameters:
  /// - [birthday]: Customer's birth date in YYYY-MM-DD format
  /// - [reference]: Transaction reference from the original charge request
  ///
  /// Example:
  /// ```dart
  /// final birthdayOptions = SubmitChargeOptions.birthday(
  ///   birthday: '1990-05-15',
  ///   reference: 'TXN_123456789',
  /// );
  /// ```
  const factory SubmitChargeOptions.birthday({
    required String birthday,
    required String reference,
  }) = SubmitBirthdayOptions;

  /// Creates options for submitting billing address during charge flow.
  ///
  /// Used when address verification is required for the charge, commonly
  /// for international transactions, high-value payments, or specific
  /// merchant categories that require AVS (Address Verification Service).
  ///
  /// Parameters:
  /// - [address]: Full street address of the customer
  /// - [reference]: Transaction reference from the original charge request
  /// - [city]: City name
  /// - [state]: State or province name
  /// - [zipcode]: Postal/ZIP code
  ///
  /// Example:
  /// ```dart
  /// final addressOptions = SubmitChargeOptions.address(
  ///   address: '123 Main Street, Apt 4B',
  ///   reference: 'TXN_123456789',
  ///   city: 'Lagos',
  ///   state: 'Lagos',
  ///   zipcode: '100001',
  /// );
  /// ```
  const factory SubmitChargeOptions.address({
    required String address,
    required String reference,
    required String city,
    required String state,
    required String zipcode,
  }) = SubmitAddressOptions;
}

/// PIN submission options for charge authentication.
///
/// This class contains the specific data required when a charge flow
/// requires PIN verification. The PIN is typically the customer's
/// 4-digit card PIN or bank account PIN.
@MappableClass()
class SubmitPinOptions extends SubmitChargeOptions
    with SubmitPinOptionsMappable {
  /// Creates PIN submission options with the required data.
  ///
  /// Parameters:
  /// - [pin]: Customer's 4-digit PIN for the payment method
  /// - [reference]: Transaction reference from the original charge
  const SubmitPinOptions({
    required this.pin,
    required this.reference,
  });

  /// Customer's 4-digit PIN for authenticating the payment method.
  ///
  /// This is the PIN associated with the customer's debit card or
  /// bank account being charged. Must be exactly 4 digits.
  final String pin;

  /// Transaction reference from the original charge request.
  ///
  /// This links the PIN submission to the specific transaction
  /// that requires additional authentication.
  final String reference;
}

/// OTP submission options for charge authentication.
///
/// This class contains the data required when a charge flow requires
/// OTP (One-Time Password) verification. The OTP is typically sent
/// via SMS or generated by a mobile banking app.
@MappableClass()
class SubmitOtpOptions extends SubmitChargeOptions
    with SubmitOtpOptionsMappable {
  /// Creates OTP submission options with the required verification data.
  ///
  /// Parameters:
  /// - [otp]: One-Time Password received by the customer
  /// - [reference]: Transaction reference from the original charge
  const SubmitOtpOptions({
    required this.otp,
    required this.reference,
  });

  /// One-Time Password received by the customer for verification.
  ///
  /// This is typically a 6-digit code sent via SMS to the customer's
  /// registered phone number or generated by their bank's mobile app.
  final String otp;

  /// Transaction reference from the original charge request.
  ///
  /// This links the OTP submission to the specific transaction
  /// that requires additional authentication.
  final String reference;
}

/// Phone submission options for charge verification.
///
/// This class contains the phone number required when additional
/// phone verification is needed during the charge flow, typically
/// for risk assessment or identity confirmation.
@MappableClass()
class SubmitPhoneOptions extends SubmitChargeOptions
    with SubmitPhoneOptionsMappable {
  /// Creates phone submission options with the customer's phone number.
  ///
  /// Parameters:
  /// - [phone]: Customer's phone number in international format
  /// - [reference]: Transaction reference from the original charge
  const SubmitPhoneOptions({
    required this.phone,
    required this.reference,
  });

  /// Customer's phone number in international format.
  ///
  /// Should include country code (e.g., +234 for Nigeria).
  /// Used for additional verification or risk assessment.
  final String phone;

  /// Transaction reference from the original charge request.
  ///
  /// This links the phone submission to the specific transaction
  /// that requires additional verification.
  final String reference;
}

/// Birthday submission options for charge identity verification.
///
/// This class contains the birth date required when additional identity
/// verification is needed during the charge flow, typically for high-value
/// transactions or specific bank requirements to confirm customer identity.
@MappableClass()
class SubmitBirthdayOptions extends SubmitChargeOptions
    with SubmitBirthdayOptionsMappable {
  /// Creates birthday submission options with the customer's birth date.
  ///
  /// Parameters:
  /// - [birthday]: Customer's birth date in YYYY-MM-DD format
  /// - [reference]: Transaction reference from the original charge
  const SubmitBirthdayOptions({
    required this.birthday,
    required this.reference,
  });

  /// Customer's birth date in YYYY-MM-DD format.
  ///
  /// Used for identity verification during the charge flow.
  /// Must be provided in ISO date format (e.g., "1990-05-15").
  final String birthday;

  /// Transaction reference from the original charge request.
  ///
  /// This links the birthday submission to the specific transaction
  /// that requires additional identity verification.
  final String reference;
}

/// Address submission options for charge verification.
///
/// This class contains the complete billing address information required
/// when address verification is needed during the charge flow, commonly
/// for international transactions, high-value payments, or specific
/// merchant categories that require AVS (Address Verification Service).
@MappableClass()
class SubmitAddressOptions extends SubmitChargeOptions
    with SubmitAddressOptionsMappable {
  /// Creates address submission options with complete billing address details.
  ///
  /// Parameters:
  /// - [address]: Full street address of the customer
  /// - [reference]: Transaction reference from the original charge
  /// - [city]: City name
  /// - [state]: State or province name
  /// - [zipcode]: Postal/ZIP code
  const SubmitAddressOptions({
    required this.address,
    required this.reference,
    required this.city,
    required this.state,
    required this.zipcode,
  });

  /// Customer's full street address including house number and street name.
  ///
  /// This should include the complete street address as it appears
  /// on billing statements (e.g., "123 Main Street, Apt 4B").
  final String address;

  /// Transaction reference from the original charge request.
  ///
  /// This links the address submission to the specific transaction
  /// that requires address verification.
  final String reference;

  /// City name from the customer's billing address.
  ///
  /// Should match the city on the customer's billing address
  /// for proper address verification.
  final String city;

  /// State or province name from the customer's billing address.
  ///
  /// Should match the state/province on the customer's billing
  /// address for AVS verification.
  final String state;

  /// Postal code or ZIP code from the customer's billing address.
  ///
  /// Used for Address Verification Service (AVS) to confirm
  /// the customer's billing address matches card records.
  final String zipcode;
}
